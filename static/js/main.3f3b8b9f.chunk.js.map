{"version":3,"sources":["components/logo/logosama.png","assets/img/googleIcon.png","components/logo/logo.js","components/anime/anime.js","types/types.js","actions/modal.js","components/create-song/createSongForm.js","actions/songList.js","components/searcher/schema.js","components/searcher/animeList.js","components/searcher/searcher.js","components/user/user.js","firebase/firebaseConfig.js","actions/auth.js","components/login/loginButton.js","containers/header/headerContainer.js","components/player/player.js","containers/player/playerContainer.js","components/song/song.js","containers/song-list/songListContainer.js","components/order/order.js","containers/orders/ordersContainer.js","containers/body/bodyContainer.js","containers/modal/modalContainer.js","as-radio-app.js","store/store.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/songListReducer.js","index.js"],"names":["module","exports","Logo","className","src","logo","alt","Anime","animeName","animeCoverURL","bannerImage","animeCoverLarge","data-banner","data-imagelarge","types","closeModal","component","isActive","type","payload","CreateSongForm","animeComponent","dispatch","useDispatch","useState","detail","setDetail","state","useSelector","songList","createSong","e","preventDefault","name","props","image","banner","animeBanner","newSong","uid","substring","Date","now","list","addSong","database","ref","set","date","id","onInput","target","value","placeholder","onClick","schema","query","gql","setVariables","searchKey","page","perPage","AnimeList","handleModal","showModal","variables","loading","error","data","Page","media","length","map","anime","title","romaji","coverImage","medium","imageLarge","large","form","style","cursor","key","fontSize","opacity","Searcher","visible","setVisible","setSearchKey","onFocus","onBlur","setTimeout","onChange","User","photo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleAuthProvider","auth","GoogleAuthProvider","login","displayName","LoginButton","signInWithPopup","then","user","photoURL","googleIcon","HeaderContainer","Player","description","cover","backgroundImage","PlayerContainer","song","Song","hover","setHover","handleRemove","remove","removedSong","find","filter","removeSong","onMouseEnter","onMouseLeave","SongListContainer","orderByChild","once","snap","songs","forEach","child","val","push","setSongs","Order","OrdersContainer","BodyContainer","ModalContainer","display","document","getElementById","contains","AsRadioApp","modal","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","client","ApolloClient","uri","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.3f3b8b9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logosama.5a631f96.png\";","module.exports = __webpack_public_path__ + \"static/media/googleIcon.02e7940c.png\";","import React from 'react'\r\nimport logo from './logosama.png'\r\n\r\nconst Logo = () => {\r\n\r\n    const appName = \"Anime Sama Radio\"\r\n\r\n    return (\r\n        <div className=\"as-component-logo\">\r\n\r\n            <img src={ logo } alt={ appName }/>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react'\r\n\r\nconst Anime = ({animeName, animeCoverURL, bannerImage, animeCoverLarge}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"as-component-anime\" data-banner={ bannerImage } data-imagelarge={animeCoverLarge}>\r\n\r\n            <img src={ animeCoverURL } alt={ animeName } />\r\n            <span> { animeName } </span>\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Anime;","\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    showModal: '[Modal] Show',\r\n    closeModal: '[Modal] Close',\r\n\r\n    addSong: '[SongList] Add Song',\r\n    setSongs: '[SongList] Set Songs',\r\n    removeSong: '[SongList] Remove Song',\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const showModal = (component, isActive) => ({\r\n\r\n    type: types.showModal,\r\n    payload: {\r\n        component,\r\n        isActive\r\n    }\r\n\r\n})\r\n\r\nexport const closeModal = (component, isActive) => ({\r\n\r\n    type: types.closeModal,\r\n    payload: {\r\n        component,\r\n        isActive\r\n    }\r\n\r\n})\r\n\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSong } from './../../actions/songList';\r\nimport { database } from 'firebase/app';\r\nimport { closeModal } from '../../actions/modal';\r\n\r\nconst CreateSongForm = ({animeComponent}) => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [detail, setDetail] = useState('');\r\n\r\n    const state = useSelector(state => state.songList)\r\n\r\n\r\n    const createSong = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const name = animeComponent.props.animeName;\r\n        const image = animeComponent.props.animeCoverLarge;\r\n        const banner = animeComponent.props.animeBanner;\r\n\r\n        const newSong = {\r\n\r\n            uid: name.substring(0,3) + Date.now(),\r\n            name: name,\r\n            image: image,\r\n            detail: detail,\r\n            banner: banner,\r\n        }\r\n\r\n        dispatch( addSong([...state.songList], newSong) );\r\n\r\n        database().ref('queue/' + newSong.uid).set({...newSong,date:Date.now()});\r\n\r\n        dispatch( closeModal({},false));\r\n\r\n    }\r\n\r\n    return (\r\n        <form id=\"as-create-song-form\" className=\"as-component-createSongForm\">\r\n\r\n            {animeComponent}\r\n            <input type=\"text\" onInput={e=>setDetail(e.target.value)} placeholder=\"Especifica si es OP/ED - Ej: Ending 1\"/>\r\n            <div className=\"as-component-createSongForm-buttons\">\r\n                <button onClick={e=>createSong(e)}>Agregar a Cola</button>\r\n                {/* <button  onClick={e=>e.preventDefault()}>Hacer pedido</button> */}\r\n            </div>\r\n        \r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateSongForm;","import { types } from \"../types/types\"\r\n\r\n\r\nexport const addSong = (list,newSong) => ({\r\n\r\n    type: types.addSong,\r\n    payload: {\r\n        list,\r\n        newSong\r\n    }\r\n\r\n})\r\n\r\nexport const setSongs = (songs) => ({\r\n\r\n    type: types.setSongs,\r\n    payload: songs\r\n})\r\n\r\n\r\nexport const removeSong = (list,removedSong) => ({\r\n\r\n    type: types.removeSong,\r\n    payload: {\r\n        list,\r\n        removedSong\r\n    }\r\n\r\n})","import { gql } from \"apollo-boost\"\r\n\r\nexport const schema = {\r\n\r\n    query: gql`\r\n        query ($id: Int, $page: Int, $perPage: Int, $search: String) {\r\n            Page (page: $page, perPage: $perPage) {\r\n            pageInfo {\r\n                total\r\n                currentPage\r\n                lastPage\r\n                hasNextPage\r\n                perPage\r\n            }\r\n            media (id: $id, search: $search, type:ANIME) {\r\n                id\r\n                coverImage {\r\n                medium\r\n                large\r\n                }\r\n                bannerImage\r\n                title {\r\n                romaji\r\n                }\r\n            }\r\n            }\r\n        }\r\n        `,\r\n\r\n    setVariables: (searchKey,page,perPage) => ({\r\n        \r\n        \"search\": searchKey,\r\n        \"page\": page,\r\n        \"perPage\": perPage\r\n    })\r\n    \r\n}","import React from 'react'\r\n\r\nimport { Query } from 'react-apollo';\r\n\r\nimport Anime from '../anime/anime';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { showModal } from '../../actions/modal';\r\n\r\nimport CreateSongForm from '../create-song/createSongForm';\r\nimport { schema } from './schema';\r\n\r\n\r\nconst AnimeList = ({searchKey}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleModal = (component) => dispatch(showModal(component,true));\r\n\r\n  return (\r\n      \r\n      <Query\r\n        query={schema.query}\r\n        variables={schema.setVariables(searchKey,1,10)}\r\n      >\r\n\r\n      {({ loading, error, data }) => {\r\n\r\n          if (loading) return <div>Loading...</div>\r\n          if (error) return <div>Error</div>\r\n          if (!data.Page.media.length) return <div className=\"div-flex-centered\"><p style={{fontSize: 12,opacity: 0.7}}>No se encontraron animes.</p></div>\r\n\r\n          return (\r\n          \r\n            <div className=\"div-grid-gap-5\">\r\n            {\r\n              data.Page.media.map(anime => {\r\n\r\n                const name = anime.title.romaji;\r\n                const image = anime.coverImage.medium;\r\n                const imageLarge = anime.coverImage.large;\r\n                const banner = anime.bannerImage || imageLarge;\r\n\r\n                const animeComponent = <Anime               \r\n                  animeName={name}\r\n                  animeCoverURL={image}\r\n                  animeBanner={banner}\r\n                  animeCoverLarge={imageLarge}\r\n                />     \r\n\r\n                const form = <CreateSongForm animeComponent={animeComponent}/>\r\n\r\n                return (\r\n                  <li style={{cursor:'pointer'}} key={name} onClick={()=>handleModal(form)}>\r\n                    {animeComponent}             \r\n                  </li>\r\n                )\r\n\r\n              })\r\n            }\r\n            </div>\r\n          )\r\n      }}\r\n\r\n      </Query>\r\n  )\r\n}\r\n\r\nexport default AnimeList","import React, { useState } from 'react'\r\nimport AnimeList from './animeList'\r\n\r\nconst Searcher = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const handleVisible = () => setVisible(true);\r\n\r\n    const handleNotVisible = () => setTimeout(()=>{setVisible(false)},200);\r\n\r\n    const [searchKey, setSearchKey] = useState('0');\r\n\r\n    const handleSearchKey = (value) => setSearchKey(value);\r\n\r\n    return (\r\n        <form className=\"as-component-searcher\">\r\n\r\n            <input type=\"text\" onFocus={handleVisible} onBlur={handleNotVisible} onChange={(e)=>handleSearchKey(e.target.value)} />\r\n            <button type=\"submit\" onClick={(e)=>{e.preventDefault();}}>Buscar</button>\r\n            { visible && \r\n                <div className=\"as-component-searcher-animeList\" >\r\n                    <AnimeList searchKey={searchKey} />\r\n                </div>\r\n            }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Searcher;","import React from 'react'\r\n\r\nconst User = ({uid, photo, name}) => {\r\n\r\n    return (\r\n        <div id={uid} className=\"as-component-user\">\r\n\r\n            <span>Bienvenido, <strong> { name } </strong></span>\r\n            <img src={ photo } alt={ name }/>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n\r\n    apiKey: \"AIzaSyA0LMm1z3A5qdHmgXqPypxphDextrOqmsc\",\r\n    authDomain: \"anime-sama-radio-7a772.firebaseapp.com\",\r\n    databaseURL: \"https://anime-sama-radio-7a772.firebaseio.com\",\r\n    projectId: \"anime-sama-radio-7a772\",\r\n    storageBucket: \"anime-sama-radio-7a772.appspot.com\",\r\n    messagingSenderId: \"304325430709\",\r\n    appId: \"1:304325430709:web:1172d0d1353039fdc65dfc\",\r\n    measurementId: \"G-WYMDFPZRXH\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { firebase, googleAuthProvider } from '../firebase/firebaseConfig'\r\nimport { types } from './../types/types';\r\n\r\nexport const startGoogleLogin = ()=> {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider ).then( ({user}) => {\r\n            dispatch(\r\n                login( user.uid, user.photoURL, user.displayName)\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (uid, photo, displayName) => ({\r\n\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        photo,\r\n        displayName\r\n    }\r\n\r\n})","import React from 'react'\r\nimport googleIcon from '../../assets/img/googleIcon.png';\r\nimport { startGoogleLogin } from './../../actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst LoginButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"as-component-loginButton\" onClick={ handleGoogleLogin }>\r\n\r\n            <img src={ googleIcon } alt=\"Google\" />\r\n            <span>Iniciar sesión</span>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginButton;","import React from 'react';\r\nimport Logo from '../../components/logo/logo'\r\nimport Searcher from '../../components/searcher/searcher'\r\nimport User from '../../components/user/user'\r\nimport LoginButton from '../../components/login/loginButton';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst HeaderContainer = () => {\r\n\r\n    const state = useSelector(state => state.auth)\r\n\r\n    return (\r\n        \r\n        <header className=\"as-header\">\r\n            <Logo />\r\n            <Searcher />\r\n            {state?.uid && <User uid={state.uid} photo={state.photo} name={state.name}/> || <LoginButton/>}\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react'\r\n\r\nconst Player = ({title,description,cover,banner}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"as-component-player\">\r\n            \r\n            {cover!=='' && \r\n            <div className=\"as-component-player-content\">\r\n                <div className=\"blured-box\" style={{backgroundImage: `url(${banner})`}}></div>\r\n                <header>\r\n                    <p>\r\n                        <span className=\"pointIcon\">.</span>\r\n                        <span>Está sonando ahora</span>\r\n                    </p>\r\n                    <span>Cambiar</span>\r\n                </header>\r\n                <div className=\"div-flex-centered\">\r\n                    <img className=\"as-component-player-content-cover\" src={ cover } alt=\"cover\"/>\r\n                    <div className=\"as-component-player-content-detail\">\r\n                        <h2>{ title }</h2>\r\n                        <p>{ description }</p>   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Player;","import React from 'react'\r\nimport Player from '../../components/player/player'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PlayerContainer = () => {\r\n\r\n    const { songList } = useSelector(state => state.songList)\r\n\r\n    let song;\r\n    \r\n    if(songList.length > 0) { song = songList[0] }\r\n    else { song = { name:'',detail:'',image:'',banner:''} }\r\n\r\n    return (\r\n\r\n        <div className=\"as-container-player\">\r\n\r\n            <Player\r\n                title={song.name}\r\n                description={song.detail}\r\n                cover={song.image}\r\n                banner={song.banner}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PlayerContainer;","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeSong } from '../../actions/songList';\r\nimport { database } from 'firebase';\r\n\r\nconst Song = ({uid,name,image,detail}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {songList} = useSelector(state => state.songList);\r\n\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const handleRemove = (e,uid) => {\r\n\r\n        e.preventDefault();\r\n\r\n        database().ref('queue/' + uid).remove();\r\n\r\n        const removedSong = songList.find( song => song.uid === uid );\r\n\r\n        const list = songList.filter( song => song !== removedSong );\r\n\r\n        dispatch( removeSong([...list], removedSong) );\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id={ uid }\r\n            className=\"as-component-song\"\r\n            onMouseEnter={e=>setHover(true)}\r\n            onMouseLeave={e=>setHover(false)}\r\n        >\r\n            <img src={ image } alt={ name } />\r\n            <div className=\"as-component-song-body\">\r\n                <h3 className=\"as-component-song-body-title\"> { name } </h3>\r\n                <p className=\"as-component-song-body-detail\"> { detail } </p>\r\n            </div>\r\n            {hover && <button\r\n                className=\"as-component-song-removeButton\"\r\n                onClick={e=>handleRemove(e,uid)}\r\n            >x\r\n            </button>}\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Song;","import React, { useEffect, useState } from 'react'\r\nimport Song from '../../components/song/song'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadQueue } from '../../firebase/helpers/loadQueue';\r\nimport { setSongs } from '../../actions/songList';\r\nimport { database } from 'firebase';\r\n\r\n\r\nconst SongListContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { newSong, songList } = useSelector(state => state.songList)\r\n    \r\n\r\n    database().ref('queue').orderByChild('date').once('value', (snap) => {\r\n\r\n        const songs = [];\r\n\r\n        snap.forEach((child) => {\r\n            let song = child.val();\r\n\r\n            songs.push(song);\r\n        })\r\n\r\n        dispatch( setSongs(songs) );\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"as-container-songList\">\r\n\r\n            <header>\r\n                <p>En cola</p>\r\n            </header>\r\n            \r\n            <div className=\"as-container-songList-items\">\r\n                {songList.map(({name,image,detail,uid})=>{\r\n                    return <Song key={uid} uid={uid} name={name} image={image} detail={detail} />\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default SongListContainer;","import React from 'react'\r\n\r\nconst Order = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"as-component-order\">\r\n            \r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Order;","import React from 'react'\r\nimport Order from '../../components/order/order'\r\n\r\nconst OrdersContainer = () => {\r\n\r\n    return (\r\n        <div className=\"as-container-orders\">\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n            <Order/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default OrdersContainer;","import React from 'react';\r\nimport PlayerContainer from '../player/playerContainer'\r\nimport SongListContainer from '../song-list/songListContainer'\r\nimport OrdersContainer from '../orders/ordersContainer'\r\n\r\nconst BodyContainer = () => {\r\n\r\n    return (\r\n        \r\n        <section className=\"as-section\">\r\n            <PlayerContainer />\r\n            <SongListContainer />\r\n            <OrdersContainer />\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default BodyContainer;","import React from 'react'\r\nimport { closeModal } from '../../actions/modal';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ModalContainer = ({isActive,component}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleModal = (e) => {\r\n\r\n        if (!document.getElementById('as-create-song-form').contains(e.target)) {\r\n\r\n            dispatch( closeModal({},false));    \r\n        }\r\n   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"close-modal-button\" style={{ display: isActive ? 'flex' : 'none'}} onClick={e=>e.preventDefault()}><span>x</span></div>\r\n            <div className=\"as-container-modal\" style={{ display: isActive ? 'flex' : 'none'}} onClick={(e)=>handleModal(e)}>\r\n                {component}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ModalContainer;","import React from 'react';\r\nimport HeaderContainer from './containers/header/headerContainer'\r\nimport BodyContainer from './containers/body/bodyContainer'\r\nimport ModalContainer from './containers/modal/modalContainer';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AsRadioApp = () => {\r\n\r\n    const {component, isActive} = useSelector(state => state.modal);\r\n\r\n    return (\r\n        \r\n        <main id=\"main\">\r\n            <ModalContainer component={component} isActive={isActive} />\r\n            <HeaderContainer />\r\n            <BodyContainer />\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default AsRadioApp;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { modalReducer } from '../reducers/modalReducer';\r\nimport { songListReducer } from './../reducers/songListReducer';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    \r\n    auth: authReducer,\r\n    modal: modalReducer,\r\n    songList: songListReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    applyMiddleware( thunk )\r\n);","import { types } from '../types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                photo: action.payload.photo,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n\r\n            return { }\r\n    \r\n        default:\r\n            \r\n            return state\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nexport const modalReducer = (state = {isActive:false}, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.showModal:\r\n\r\n            return {\r\n                isActive: true,\r\n                component: action.payload.component,\r\n            }\r\n        \r\n        case types.closeModal:\r\n\r\n            return { \r\n                isActive: false\r\n            }\r\n    \r\n        default:\r\n            \r\n            return state\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nexport const songListReducer = (state = {songList: []}, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.addSong:\r\n\r\n            return {\r\n\r\n                songList: [...action.payload.list,action.payload.newSong], \r\n                newSong: action.payload.newSong\r\n                \r\n            }\r\n\r\n        case types.setSongs:\r\n\r\n            return {\r\n\r\n                songList: [...action.payload]\r\n            }\r\n        \r\n        case types.removeSong:\r\n\r\n            return { \r\n                songList: [...action.payload.list],\r\n                removedSong: action.payload.removedSong \r\n            }\r\n    \r\n        default:\r\n            \r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport AsRadioApp from './as-radio-app';\r\n\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nimport './styles/styles.scss';\r\nimport { store } from './store/store';\r\n\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'https://graphql.anilist.co'\r\n})\r\n\r\nReactDOM.render( \r\n    <ApolloProvider client={client}>\r\n        <Provider store={store}>\r\n            <AsRadioApp />\r\n        </Provider>\r\n    </ApolloProvider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}